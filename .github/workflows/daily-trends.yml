name: Daily Tech Trends Update

on:
  schedule:
    - cron: '0 * * * *'  # Run every hour
  workflow_dispatch:  # Allows manual trigger

permissions:
  contents: write
  pull-requests: write

jobs:
  should-run:
    runs-on: ubuntu-latest
    outputs:
      should_execute: ${{ steps.check.outputs.should_execute }}
    steps:
      - name: Check if we should run
        id: check
        run: |
          # Generate random number between 1 and 10
          # We want ~10% probability of running
          if [ $((RANDOM % 10)) -eq 0 ]; then
            echo "should_execute=true" >> $GITHUB_OUTPUT
          else
            echo "should_execute=false" >> $GITHUB_OUTPUT
          fi

  update-trends:
    needs: should-run
    if: needs.should-run.outputs.should_execute == 'true'
    runs-on: ubuntu-latest
    outputs:
      pr_number: ${{ steps.create-pr.outputs.pull-request-number }}
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.PAT_TOKEN }}
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run trends script
      run: python src/main.py

    - name: Setup Git
      run: |
        # Create git config directory if it doesn't exist
        mkdir -p ~/.config/git
        touch ~/.gitconfig
        
        # Configure git
        git config --global user.email "tstanmay13@gmail.com"
        git config --global user.name "tstanmay13"
        git config --global --add safe.directory /github/workspace
        
        # Debug information
        echo "Git config directory:"
        ls -la ~/.config/git
        echo "Git config file:"
        ls -la ~/.gitconfig
        echo "Git configuration:"
        git config --global --list
        
    - name: Stage Changes
      run: |
        git add data/
        git status
        
    - name: Create Pull Request
      id: create-pr
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.PAT_TOKEN }}
        commit-message: "Update tech trends"
        title: "Update tech trends"
        body: |
          Automated update of tech trends data.
          This PR was created automatically by the daily trends workflow.
        branch: update-tech-trends
        base: master
        delete-branch: true

  auto-merge:
    needs: update-trends
    if: needs.update-trends.outputs.pr_number != ''
    runs-on: ubuntu-latest
    steps:
      - name: Merge PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.PAT_TOKEN }}
          script: |
            const prNumber = ${{ needs.update-trends.outputs.pr_number }};
            console.log(`Merging PR #${prNumber}`);
            
            await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
              merge_method: 'squash'
            });

  cleanup:
    needs: [update-trends, auto-merge]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN }}
          
      - name: Cleanup branches
        run: |
          # Delete the update-tech-trends branch if it still exists
          git fetch origin
          if git show-ref --verify --quiet refs/remotes/origin/update-tech-trends; then
            echo "Deleting update-tech-trends branch..."
            git push origin --delete update-tech-trends
          fi
          
          # Clean up any local branches
          git fetch --prune
          git branch -D update-tech-trends || true
          
          # Reset to clean state
          git reset --hard
          git clean -fd